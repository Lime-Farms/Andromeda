- name: determine if the user is already present
  command:
    argv:
      - grep
      - -q
      - "^{{ username }}:"
      - /etc/passwd
  register: user_state
  ignore_errors: yes
  failed_when:
    - user_state.rc < 0
  changed_when:
    - user_state.rc > 0

- name: run debian specific user creation tasks
  import_tasks: debian.yml
  when: ansible_facts['os_family']|lower == 'debian'

- name: generate a random password
  command:
    argv:
      - pwgen
      - -cnys
      - 16
      - 1
  register: rand_pass
  changed_when:
    - true
  when:
    - user_state.changed|bool

- name: encrypt the generated password
  command:
    stdin: "{{ rand_pass.stdout }}"
    argv:
      - openssl
      - passwd
      - -stdin
      - -quiet
      - -6
  register: encrypted
  changed_when:
    - true
  when:
    - user_state.changed|bool

- name: create the user's group
  group:
    name: "{{ group }}"
    state: present

- name: create the user
  user:
    name: "{{ username }}"
    password: "{{ encrypted.stdout }}"
    update_password: on_create
    comment: "{{ comment }}"
    shell: "{{ shell }}"
    group: "{{ group }}"
    create_home: yes
    skeleton: /etc/skel
    generate_ssh_key: yes
    ssh_key_comment: "{{ username }} - {{ inventory_hostname }}"
    ssh_key_file: .ssh/id_ed25519
    ssh_key_type: ed25519
  when:
    user_state.changed|bool

- name: install the user's ssh key
  authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ sshkey }}"

- name: add the user to admin groups
  user:
    name: "{{ username }}"
    append: yes
    groups: sudo,adm
  when:
    - admin|bool
